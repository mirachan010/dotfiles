[[plugins]]
repo = 'Shougo/dein.vim'
hook_add = '''
  let g:dein#install_github_api_token=$GITHUB_OAUTH_TOKEN
'''

[[plugins]]
repo = 'vim-jp/vimdoc-ja.git'
hook_add = '''
    set helplang=ja,en
'''
# Set if use neovim
[[plugins]]
repo='neoclide/coc.nvim'
rev='release'
if=''' has('nvim')'''

# For vim-lsp
[[plugins]]
repo = 'prabirshrestha/vim-lsp'
if=''' !has('nvim')'''
hook_source='''
"---====setup vim-lsp==---
let g:lsp_signs_enabled = 1
let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1
let g:lsp_virtual_text_enabled = 1
let g:lsp_signs_error = {'text': '✗'}
let g:lsp_signs_warning = {'text': '‼'}
let g:lsp_signs_information = {'text': 'i'}
let g:lsp_signs_hint = {'text': '?'}

nmap <Leader>l [Lsp]
" 定義ジャンプ
nnoremap [Lsp]<C-]> :<C-u>LspDefinition<CR>
" 定義情報のホバー表示
nnoremap [Lsp]K :<C-u>LspHover<CR>
" 名前変更
nnoremap [Lsp]R :<C-u>LspRename<CR>
" 参照検索
nnoremap [Lsp]n :<C-u>LspReferences<CR>
" Lint結果をQuickFixで表示
nnoremap [Lsp]f :<C-u>LspDocumentDiagnostics<CR>
" テキスト整形
nnoremap [Lsp]s :<C-u>LspDocumentFormat<CR>
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'
if=''' !has('nvim')'''
merged = 0
hook_add='''
let g:lsp_setting = {
  \ 'efm-langserver':{'disabled': v:false}
  \ }
let g:lsp_settings_root_markers = [
  \ '.git',
  \ '.git/',
  \ ]
'''
[[plugins]]
repo = 'mattn/vim-lsp-icons'
if=''' !has('nvim')'''

# Set if use Vim{{{
#    use for remote plugins{{{
[[plugins]]
if=''' !has('nvim')'''
repo = 'roxma/nvim-yarp'

[[plugins]]
if=''' !has('nvim')'''
repo = 'roxma/vim-hug-neovim-rpc'
#    }}}
# Set easy translate
[[plugins]]
repo = 'skanehira/translate.vim'
if=''' !has('nvim')'''
rev = 'v0.0.3'
hook_add = '''
    let g:translate_source = "en"
    let g:translate_target = "ja"
    let g:translate_winsize = 10
    vmap tj <Plug>(VTranslate)
    vmap te <Plug>(VTranslateBang)
'''
#make imgfiles
[[plugins]]
repo = 'skanehira/code2img.vim'
if=''' !has('nvim')'''
hook_add = '''
let g:code2img_theme = 'monokai'
let g:code2img_line_number = 1
'''
# }}}

# Make new Function{{{
# help for f or F
[[plugins]]
repo='unblevable/quick-scope'
hook_add='''
    let g:qs_highlight_on_keys = ['f','F']
'''
#    Easy action motions{{{
# it can easy to maeke "surround"
[[plugins]]
repo = 'tpope/vim-surround'
# it can easy to make "comment"
[[plugins]]
repo = 'tpope/vim-commentary'
# it can easy to repeate command
[[plugins]]
repo = 'tpope/vim-repeat'
#    }}}
#    Easy action commands{{{
# easy to change word
[[plugins]]
repo = 'lambdalisue/reword.vim'
# use for markdown
[[plugins]]
repo = 'godlygeek/tabular'
# It can run and test in vim
[[plugins]]
repo='thinca/vim-quickrun'
# use cheatsheet
[[plugins]]
repo='reireias/vim-cheatsheet'
hook_add = '''
let g:cheatsheet#cheat_file = '~\dotfiles\common\vim\cheatsheet.md'
nmap <Leader>cc :<c-u>Cheat<CR>
'''
# Set shortcut commands
[[plugins]]
repo = 'c000/rapidfire.vim'
hook_add = '''
    let g:rapidfire#persistent_filename="~/dotfiles/common/vim/key_setting.json"
    nnoremap <F1>    :<C-u>Rapidfire F1<CR>
    nnoremap <F2>    :<C-u>Rapidfire F2<CR>
    nnoremap <F3>    :<C-u>Rapidfire F3<CR>
    nnoremap <Up>    :<C-u>Rapidfire Up<CR>
    nnoremap <Left>  :<C-u>Rapidfire Left<CR>
    nnoremap <Right> :<C-u>Rapidfire Right<CR>
    nnoremap <Down>  :<C-u>Rapidfire Down<CR>
'''
# To see github.com
[[plugins]]
repo = 'skanehira/gh.vim'
hook_add = '''
  let g:gh_token=$GITHUB_OAUTH_TOKEN
'''
#    }}}
# }}}

# To use git in vim{{{
[[plugins]]
repo = 'tpope/vim-fugitive'
# Check git diff in numberline
[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add='''
   set signcolumn=yes
   let g:gitgutter_map_keys = 0
   nnoremap [Git] <Nop>
   nmap <Leader>g [Git]
   nmap [Git]p <Plug>(GitGutterPrevHunk)
   nmap [Git]n <Plug>(GitGutterNextHunk)
   nmap [Git]a <Plug>(GitGutterStageHunk)
   nmap [Git]u <Plug>(GitGutterRevertHunk)
   nmap [Git]v <Plug>(GitGutterPreviewHunk)
'''
# }}}

# Set looks{{{
# status line
[[plugins]]
repo = 'itchyny/lightline.vim'
# Make indentline
[[plugins]]
repo = 'Yggdroot/indentLine'
on_cmd = ['IndentLinesToggle']
hook_add = '''
    let g:loaded_indentLine = 1
'''
#    Colorschemes{{{
[[plugins]]
repo = 'ghifarit53/tokyonight-vim'
#    }}}
# }}}
